*No, namespace is not mandatory while creating of custom module.

Types of sessions in magento
- Core/Session
This is the most bare bones session. It give the basic "anonymous" data about the visitor (cookies, IP address, error messages.
Mage_Core_Model_Session::getCookie()
Mage_Core_Model_Session::addMessage()
Mage_Core_Model_Session::useValidateRemoteAddr()

- Customer/Session
This object handles things related to the specific customer (logging in or out, name, id, email, the customer's group)
Mage_Customer_Model_Session::getCustomerId()
Mage_Customer_Model_Session::isLoggedIn()
Mage_Customer_Model_Session::getCustomerGroupId()

- Checkout/Session
This stores information related to the quote, guest or not (cart totals, items, checkout progress)
Mage_Checkout_Model_Session::getQuote()
Mage_Checkout_Model_Session::setStepData()
Mage_Checkout_Model_Session::getQuote()->getTotals()

Each of the session models are extended from Mage_Core_Model_Session_Abstract, they just offer different functionality. There really isn't much to core/session. Most of it's functionality is inherited from the parent class that they all share.

You can relate the customer/session to the checkout/session with their various methods.
e.g.
Mage::getSingleton('checkout/session')
    ->setCustomer(Mage::getSingleton('customer/session')->getCustomer());

Diff between getModel() and getSingleton() in magento
- Mage::getModel() will always return a new Object for the given model:
- Mage::getSingleton() will check whether the Object of the given model already exists and return that if it does. If it doesn't exist, it will create a new object of the given model and put in registry that it already exists. Next call will not return a new object but the existing one:
------------------------------------------------------------------------------------------
- getModel() : it creates a new object.
- getSingleto() : it first checks the existence of object and if object doesn't extist, then it creates a new one.
------------------------------------------------------------------------------------------
uses of radis cache and varnish cache.
- Caching is a helpful technique for storing frequently accessed data and serving it quickly, 
- Magento Cache Management, both Redis and Varnish are used to improve your website's performance and scalability.

    Redis offloads the database
    Varnish offloads the entire application

https://magento.stackexchange.com/questions/357244/whats-is-major-impact-when-implements-redis-cache-and-varnish-cache-on-magento-2
https://medium.com/@elightwalk/what-is-the-difference-between-the-varnish-and-redis-cache-in-magento-performance-3c5c04a8345a

Diff between in magento 1 and Magento 2 
https://meetanshi.com/blog/magento-1-vs-magento-2-major-differences/
https://www.mgt-commerce.com/blog/magento-1-vs-magento-2/

Magento 2 Dependency Injection
- A class depends on other classes.
- Dependency Injection is to inject the dependency into the class from another source.

	dependecy injection type 
		- Contructor injection : the commonly used ways to inject dependencies, add a parameter in the class constructor to inject the dependency. 
		- Method Injection :  Method injection can be used best when the dependency may vary on each method call. When an object requires performing specific actions on a dependency that cannot be injectable. For ex : observer.

	Dependency types/Dependency Injection Object Types
		- Injectable : Injectable objects in Magento 2 are classes that can be instantiated and managed by the Dependency Injection (DI) container. They are typically used for services, repositories, and other core functionalities.
		- Non-injectable. : those that cannot be automatically instantiated and managed by the DI container. These objects are typically instantiated using the new keyword directly in the code. Non-injectable objects may still have dependencies, but their instantiation is not controlled by the DI container.

	Other
		- Object manager : it creates hidden dependencies that are not required. it doesn’t follow the M2 Development Processes. The create () method of Object Manager can create your class’s objects, get, and pass the value for constructor parameter from di.xml files, we don’t recommend using it. 
		- Compiling dependencies  : Magento uses code compiler tools to collect all class dependency information and stores that information in files. The object manager uses that information during the class creating process to create concrete objects in the application.

		The compiler helps generate service classes that do not exist in the codebase (proxies, factories, and interceptors) but are declared in code or in a configuration.

Magento 2 Plugin
- allows for modifying the behavior of a public class or method.
- which you can execute some code before, after, and around the code/target class’s function
- plugin sortOrder. Plugins that call the same method run them using this order.
	3 methods in Plugin
	before - beforeDispatch()
	around - aroundDispatch()
	after - afterDispatch()
Limitations Of Plugin
	Final methods
	Final classes
	Non-public methods
	Class methods (such as static methods)
	__construct and __destruct
	Virtual types

Magento 2 Preference
- implement some interfaces or to rewrite/override the existing PHP classes and their methods. 
- you can extend a core class to rewrite the functions of that class; the new class is expected to be a complete implementation of the extended class

Magento 2 Event and Observer 
- Using events and observers, you can run your custom code in response to a specific event or even a custom event.
- execute the multiple numbers of observers for a single event trigger
Event : Events are dispatched by modules when certain actions are triggered
Observer : Observers are the particular classes that control the general behavior, performance, or change in the business logic of the store. They are executed whenever a specific event for which they were set to listen is triggered.

 Plugin vs Observer :
 - Observers can edit both private and protected methods, but plugins can only modify public methods.
 - Although there is a sort order for plugins, there is none for observers.
 - Only events that have already been delivered in Magento can be added to the observer list. In this case, plugins are more flexible.
 - Plugins are required when we need to change Magento core functionality (for example, adding more data to the order collection object). We can’t use Observer in this instance.

 Plugin vs Preference 
 - Preference is used for overriding class, Plugin is used for adding functionality before, after, and around methods.
 - You can use the preference from di.xml to override a public or protected method from a core class. plugin can't.

Magento 2 Virtual type
- Virtual types are a way of injecting dependencies into some of the existing classes without affecting other classes. 
- To explain this via a practical example, let's take a look at the following virtual type defined in the app/etc/di.xml file:
- Creating a virtual type is like creating a subclass of an existing class except for the fact that it's done in di.xml and not in code.
- Example. https://magento.stackexchange.com/questions/33103/what-is-the-difference-between-type-and-virtualtype 
- https://webkul.com/blog/virtual-types-in-magento-2/

Magento 2 Factories Vs Repository
- Factories are service classes that instantiate non-injectable classes, that is, models that represent a database entity. 
Magento’s object manager encounters a class name that ends in the word ‘Factory’, it will automatically generate the Factory class in the var/generation folder if the class does not already exist. You will see the factory class in
- Repository : A repository object is responsible for reading and writing your object information to an object store

Use Factories to create new entities Repositories do not come with methods to create a new entity, so in that case you will need a factory. 
But use the factory for the interface, such as Magento\Catalog\Api\Data\ProductInterfaceFactory - it will create the right implementation based on DI configuration.
Then use the repository->save() method to save it.
Repositories do not come with methods to create a new entity, so in that case, you will need a factory.

Magento 2 viewModel
- View model is class that we inject to phtml, so that require and related data could be access from it.
- View Model helps us to avoid unnecessary overriding of the block class

Differences Between MVC and MVVM 
The main differences between MVC and MVVM are, as follows: 

Separation of Concerns 
- MVC separates the application into three main components:
- Model: Represents the data and business logic of the application.  
- View: Handles the presentation layer and user interface.  
- Controller: Manages the interaction between the Model and the View.
- Data Binding : MVC typically does not have built-in data binding capabilities. The View relies on the Controller to retrieve data from the Model and update the UI manually.

- MVVM also emphasize separation of concerns, but with three different components:  
- Model: Represents the data and business logic, similar to MVC.  
- View: Handles the UI and presentation layer, akin to MVC.  
- ViewModel: Acts as an intermediary between the View and the Model, exposing data and commands for data binding. 
- Data Binding  : MVVM introduces powerful data binding capabilities. Data binding establishes a connection between the View and the ViewModel, allowing automatic synchronisation of data between them. When data changes in the ViewModel, the View is automatically updated, and user interactions trigger commands in the ViewModel.

EAV magento 2
- EAV stands for Entity, Attribute and Value.
- it is a technique that facilitates users to add unlimited columns to their table virtually 

EAV module will creates 6 table in database 
1) module
2) module_datetime
3) module_decimal
4) module_int
5) module_text
6) module_varchar

Difference between EAV & Flate table 
- EAV database module fully in normalized form.
- each columns value is stored in their respective data types tably which makes it more complex as they have to join 5-6 table even if you need only one detail in eav.
- columns are called attributes

- Flat : model uses just one table.
- it is not normalized and uses more database space.
- it is not good for dynamic requirements where you may have to add some more columns in future.
- its performance is fast as it needs only one query instead of joining 5-6 table in flat model.
- columns are called fields.
- EAV is used because it is much more scalable than the usual normalised database structure. De
velopers can add attributes to any entity (product, category, customer, order etc) without modifying the core database structure. 

Entity: The entity represents Magento data items such as products, categories, customers and orders. Each entity (product, category, etc.) will have its own entity record in the database.
Attribute: The attributes represent data items that belong to an entity. For example, the product entity has attributes such as name, price, status and many more.
Value: The value is the simplest to understand as it is simply a value linked to an attribute. For better understanding, let’s consider the product entity. Each product entity will have a series of attributes, one of them is the name attribute. Each product will then have a value for the name attribute (and all other attributes). 

https://blog.magestore.com/entity-attribute-value-in-magento/


Magento 2 Products 
1) Virtual products 
- A virtual product in Magento is a product type used to sell non-tangible products such as memberships, services, gift cards, and subscriptions.
- A virtual product in Magento is a product type used to sell non-tangible products such as memberships, services, gift cards, and subscriptions.
- The only difference between a simple and virtual product is that the Magento virtual product type doesn’t have any weight.

2)


Why do you think businesses choose Magento for their e-commerce platforms?
Pricing Flexibility: It offers advanced pricing options such as Special Pricing, Customer Group Pricing, and Tiered Pricing.
Inventory Control: Set minimum and maximum product quantities for cart additions, ensuring inventory management aligns with your strategy.
Product Variety: It helps you manage various product types, including simple, configurable, grouped, virtual, bundled, and downloadable products.
1. Open and flexible architecture
2. Enhanced business agility and productivity 
3. Faster Load Time :  Magento 2 can handle 10 million page views in an hour.Magento 1 cannot manage a large number of transactions in less time and also does not support full-page caching.
4. Secure Payment Gateways :  offers secure payment gateways, which are integrated with it such as Braintree, Paypal, Authorize.net, and Google Checkouts,
5. Migration tool :  Magento 2 comes with the migration tool, which easily migrates from Magento 1.9 to Magento 2.0. By using this tool, It makes data and setting easy.
6. High Performance : improved its indexers, Varnish caching integration, Magento 2 performance kit to increase the performance.
7. Scalability - To provide better performance and scalability, full-page caching and multiple admin users are also required to shop which is offered by the Magento 2
8. Testing the frameworks
9. Catalog Management
10. Fully SEO Centered
11. Tools for Advertising and Marketing

What is REst api 
- applications have to communicate with other internal and third-party applications to perform various tasks.
GET : Clients use GET to access resources that are located at the specified URL on the server. They can cache GET requests and send parameters in the RESTful API request to instruct the server to filter data before sending.


What are difference bet theme and module
- While a module is entirely based on code that extends the behavior of the platform, 
- a theme changes its look and feel and a language package is used for translating text in your Magento 2 app.

diff between virtual type and type.
- Virtual types are useful if the only necessary modifications to a class are the classes that are injected.
- Type adjusts existing classes, whereas Virtual Types creates a new class.
- Type affect all the instances, whereas Virtual Type is equivalent of a sub class, where only the sub class has the altered argument values.
- Virtual Type must extend a concrete class type.


1) Diff c:c & c:f
- The c:c cleans only the cache that Magento is actually using (doesn't clean disabled cache types). The c:f command cleans all the cache storage

2) Diff update on save & update on schedule.
- Update on Save :The index is set to update whenever a change is saved.

Update on Schedule :The index is set to update on schedule according to a cron job.

On a small store,Update on Save is fine and will add very little load.
If you have a larger store with multiple admins, working in the backend then your indexes could be getting triggered constantly. Update on Save ties up MySQL and for large stores can take hours to complete. To avoid this, it is recommended setting your indexers to Update on Schedule. Then only run the indexers as needed (via command) or via a scheduled cron task.



type of scope.

Global	System-wide settings and resources that are available throughout the installation.
Website	Settings and resources that are limited to the current website. Each website has a default store.
Store	Settings and resources that are limited to the current store. Each store has a default root category (main menu) and default store view.
Store View	Setting and resources that are limited to the current store view.

what is customer scope
if i want add to somthing on all cms page what we are use.
addAttributeToFilter() is used to filter EAV collections. EAV-models are for example product, customer, sales, etc so you can use use addAttributeToFilter() for those entities.

addFieldToFilter() is used to filter Non-EAV collections. addFieldToFilter() is mapped to addAttributeToFilter() for EAV entities. So you can just use addFieldToFilter().

diff bet collection and collection factory.
what is diff between radich cache and varnise cache.
==========================================
Why we are using api and purpose of api.
diff bet interface and model 
diff bet factory and repository
meaning of cron group
use of crontab.xml
creating api steps.
can we add asterisk in the admin side for that cronjob.


when we'll use before method 
diff plugin vs preference
What is use of require-config.js
===============================
diffe c:c and c:f
diff indexer on save and indexer on schedule
how to create patch
plugin vs preference
eav  vs flat
which steps we are follow before upgrading magento
what is tier price
What type of area in magento
=================
what is data patch
declarative schema
improve magento 
what is mvc
what is virtual type
what is di
what is module and how to create
how to improve magento performance
what is observer
what are limitation of magento
how to create api
what is viewmodel
what is eav.
what are the magic method in magento 
waht is factory.

bundle product fix price and dynamic price.
- SKU if set as Fixed, the attribute behavious is the same as with other product types. If set as Dynamic, the SKU will be composed of the bundle's base and selected SKUs.
- Price if set as Fixed, a bundle will have a base price with the taxes applied to it. You can also apply surcharges to bundle options that will infleunce the total  price when selected. If set as Dynamic, the total price will be composed from the product options prices.
- Weight if set as Fixed, you can set a weight value to the whole bundle. If set as Dynamic, the weight will be calculated from the selected bundle options.

catalog price rule and cart price rule diff
- Catalog price rules are used to apply basically a discount on the products of your store. These rules get applied to category and products pages only.
As it says, the promotion will be applied to the shopping cart page of your store. 
- Cart price rule applies whenever a customer goes to the shopping cart page to checkout or the customer will apply the coupon code on the shopping cart page.Using cart price rule we can apply discount on products, we can provide free shipping and buy-one-get-one free promotions

diff simpla and grouped product.

curl in php : it deals with URLs. It's pronounced as: "see URL."
cURL is a PHP library and command-line tool (similar to wget) that allows you to send and receive files over HTTP and FTP. 

$_server :
$_SERVER is a PHP super global variable which holds information about headers, paths, and script locations.

cookies and session
 - A cookie is often used to identify a user. A cookie is a small file that the server embeds on the user's computer. Each time the same computer requests a page with a browser, it will send the cookie too. With PHP, you can both create and retrieve cookie values.
- The following example creates a cookie named "user" with the value "John Doe". The cookie will expire after 30 days (86400 * 30). The "/" means that the cookie is available in entire website (otherwise, select the directory you prefer).
- We then retrieve the value of the cookie "user" (using the global variable $_COOKIE). We also use the isset() function to find out if the cookie is set:

A session is a way to store information (in variables) to be used across multiple pages.
Unlike a cookie, the information is not stored on the users computer.
Session variables solve this problem by storing user information to be used across multiple pages  By default, session variables last until the user closes the browser.
If you need a permanent storage, you may want to store the data in a database.
A session is started with the session_start() function.
Session variables are set with the PHP global variable: $_SESSION.
destroy the session, use session_unset() and session_destroy():

https://www.geeksforgeeks.org/what-are-the-difference-between-session-and-cookies-in-php/

Rules for PHP variables:

types of loop
The while loop executes a block of code as long as the specified condition is true.
The while loop does not run a specific number of times, but checks after each iteration if the condition is still true.

The do...while loop will always execute the block of code at least once, it will then check the condition, and repeat the loop while the specified condition is true.
do...while loop will execute its statements at least once, even if the condition is false

The for loop - Loops through a block of code a specified number of times.
The foreach loop - Loops through a block of code for each element in an array or each property in an object.

breack and continue.
- The break and continue both are used to skip the iteration of a loop. These keywords are helpful in controlling the flow of the program. Difference between break and continue:

- The break statement terminates the whole iteration of a loop whereas continue skips the current iteration.
- The break statement terminates the whole loop early whereas the continue brings the next iteration early.
- In a loop for switch, break acts as terminator for case only whereas continue 2 acts as terminator for case and skips the current iteration of loop.

diff == and ===
==  This is a comparison operator that will return either true or false by comparing the values of variables on both sides.
=== The triple equal sign comparison operator not only checks if the variables are equal in value, but it also confirms that they are of the same type before it returns true or false.

diff now date and current date
NOW() will fetch the current date and time both in format ‘YYYY-MM_DD HH:MM:SS’ while CURRENT_DATE() will fetch the date of the current day ‘YYYY-MM_DD’.
However both functions is used to give the current or present day date and time details.

primary key and foreign key : 
The PRIMARY KEY constraint uniquely identifies each record in a table.
Primary keys must contain UNIQUE values, and cannot contain NULL values.
A table can have only ONE primary key; and in the table, this primary key can consist of single or multiple columns (fields).

The FOREIGN KEY constraint is used to prevent actions that would destroy links between tables.
A FOREIGN KEY is a field (or collection of fields) in one table, that refers to the PRIMARY KEY in another table.
The table with the foreign key is called the child table, and the table with the primary key is called the referenced or parent table.


distinct : The SELECT DISTINCT statement is used to return only distinct (different) values.
limit :  clause is used to specify the number of records to return. useful on large tables with thousands of records. Returning a large number of records can impact performance.
OFFSET : return only 3 records, start on record 4 (OFFSET 3)"

joine types :
A JOIN clause is used to combine rows from two or more tables, based on a related column between them.

- The INNER JOIN keyword selects records that have matching values in both tables.
- The LEFT JOIN keyword returns all records from the left table (table1), and the matching records (if any) from the right table (table2).
- The RIGHT JOIN keyword returns all records from the right table (table2), and the matching records (if any) from the left table (table1).
- The CROSS JOIN keyword returns all records from both tables (table1 and table2).
- A self join is a regular join, but the table is joined with itself.
- The UNION operator is used to combine the result-set of two or more SELECT statements.
	- Every SELECT statement within UNION must have the same number of columns
	- The columns must also have similar data types
	- The columns in every SELECT statement must also be in the same order


Patches
I wouldn't officially say this is the best approach. It's conditional. There are cases where a modification you are making is just fixing a bug with Magento or a third party module. At least with non Magento Cloud sites, you can install the cweagans/composer-patches composer package (see link below), to gain the ability to patch composer installed modules pretty easily:

Github - cweagans/composer-patches

Pros

Instead of creating an entire module with a preference/plugin to fix something, you could just create a patch if you know that the change should be there anyway
If/when the original module vendor applies the fix and your patch no longer applies, it can be skipped from being applied automatically, or fail loudly in a development environment so you can address properly
Cons

If a vendor changes the files you are patching but does not introduce your same fix, your patch could no longer be applied
